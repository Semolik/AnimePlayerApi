services:
  app:
    container_name: app
    build: .
    ports:
      - ${API_PORT}:8000
    env_file:
      - .env
    environment:
      - REDIS_HOST=redis
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    command: uvicorn src.main:app --host 0.0.0.0 --reload --port 8000
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_started
      migration:
        condition: service_completed_successfully
    volumes:
      - .:/usr/src
      - ./content:/content
    restart: always

  redis:
    image: redis:latest
    container_name: redis
    restart: always

  migration:
    container_name: migration
    build: .
    env_file:
      - .env
    environment:
      - REDIS_HOST=redis
      - PYTHONPATH=/usr/src
    command: alembic upgrade head
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - .:/usr/src

  worker:
    build: .
    volumes:
      - .:/usr/src
    command: celery -A src.worker.celery worker
    env_file:
      - .env
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - REDIS_HOST=redis
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_started
      migration:
        condition: service_completed_successfully
    restart: always

  database:
    image: library/postgres:alpine
    container_name: database
    env_file:
      - .env
    volumes:
      - ./db-data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always
